image: docker:latest

variables:
  DOCKER_DRIVER: overlay2
  REDIS_HOST: redis-test.default.svc.cluster.local
  ESHOST: elastic-standalone-test-es-http.default.svc.cluster.local
  MONGO: "mongodb://se3-test-0.se3-test-svc.mongodb.svc.cluster.local"
  MAVEN_OPTS: "-Dmaven.repo.local=/opt/cache/.m2/repository"

stages:
  - package
  - test
  - build
  - deploy-test
  - deploy-prod

maven-build:
  image: maven:3-jdk-8
  stage: package
  only:
    - develop
  script: 
    - mvn -B -DskipTests clean package
    - cp target/app.jar /opt/cache/app.jar

maven-test:
  image: maven:3-jdk-8
  stage: test
  only:
    - develop
  script: 
    - mkdir target
    - cp /opt/cache/app.jar target/app.jar 
    - mvn test
  artifacts:
    paths:
      - target/surefire-reports/*.xml

build-image:
  stage: build
  only:
    - develop
  script:
    - ls target
    - cp /opt/cache/app.jar target/app.jar
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
    - docker push $CI_REGISTRY_IMAGE:latest

deploy-k8s-test:
  stage: deploy-test
  image: bitnami/kubectl
  only:
    - develop
  script:
    - sed -i "s/TAG/$CI_PIPELINE_ID/g" deploy-test.yaml
    - sed -i "s/EUSER/$ES_USER/g" deploy-test.yaml
    - sed -i "s/EPASS/$ES_PASS/g" deploy-test.yaml
    - cat deploy-test.yaml
    - kubectl apply -f deploy-test.yaml

deploy-k8s_prod:
  stage: deploy-prod
  image: bitnami/kubectl
  only:
    - develop
  script:
    - sed -i "s/TAG/$CI_PIPELINE_ID/g" deployment.yaml
    - cat deployment.yaml
    - kubectl apply -f deployment.yaml